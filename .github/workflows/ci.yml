name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  test-arithmetic:
    runs-on: ubuntu-latest
    container:
      image: node:20
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Run arithmetic tests
        run: npm test -- tests/arithmetic.test.js

  test-division:
    runs-on: ubuntu-latest
    container:
      image: node:20
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm install

      - name: Run division tests
        run: npm test -- tests/division.test.js

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: [test-arithmetic, test-division]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker image
        run: docker build -t math-app .

      - name: Push Docker image to Docker Hub
        run: docker push math-app

      - name: Deploy to AWS EC2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ${{ secrets.EC2_SSH_KEY }} ec2-user@${{ secrets.EC2_INSTANCE }} 'docker pull math-app && docker stop math-app || true && docker rm math-app || true && docker run -d -p 3000:3000 --name math-app math-app'
